version: "3.9"

services:
  api:
    container_name: api-container
    image: imageservice
    build:
      context: .
      dockerfile: ImageService/Dockerfile
    environment:
      - ConnectionStrings__Database=User ID=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-root};Server=postgres;Port=5432;Database=ImageService; IntegratedSecurity=true;Pooling=true;
      - ConnectionStrings__MINIO_ENDPOINT=${MINIO_SERVER_URL:-192.168.0.11}
      - ConnectionStrings__MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-MinioSecretKey123$}
      - ConnectionStrings__MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-MinioSecretKey123$}
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "8000:80"
    networks:
      - backend
    restart: always
    depends_on:
      - postgres
      - minio
  
  postgres:
    container_name: postgres_db_container
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      PGDATA: /data/postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: always
  
  pgadmin:
    container_name: pgadmin_db_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - backend
    restart: unless-stopped
  
  minio:
    container_name: minio-container
    image: minio/minio:RELEASE.2022-01-08T03-11-54Z.hotfix.f533071b4
    command: server /data --console-address ":9090"
    environment:
      MINIO_SERVER_URL: ${MINIO_SERVER_URL:-http://192.168.0.11:9000}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-MinioSecretKey123$}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-MinioSecretKey123$}
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
      - "9090:9090"
    networks:
      - backend
    restart: always


networks:
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  minio: